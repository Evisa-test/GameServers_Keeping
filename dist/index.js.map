{
  "version": 3,
  "sources": ["../index.js"],
  "sourceRoot": "dist",
  "sourcesContent": ["\n// =================================================================================\n// \u6E38\u620F\u9E21 \u81EA\u52A8\u7EED\u671F\n// \u539F\u4F5C\u8005: Pungwing \u5355\u673A\u7248\n// \u4E8C\u6B21\u521B\u4F5C\uFF1AEvisa  \u8F7B\u91CF\u5BB9\u5668\u517C\u5BB9\u7248\u672C \n// \u529F\u80FD\u589E\u5F3A\u7248: \u6DFB\u52A0\u4E86 Web UI \u7BA1\u7406\u548C Telegram \u901A\u77E5\n// =================================================================================\n\n// --- \u5168\u5C40\u5E38\u91CF ---\nconst KV_CONFIG_KEY = \"servers_config\";\nconst AUTH_COOKIE_NAME = \"__auth_token\";\n\n// --- \u9759\u6001\u8D44\u6E90 ---\nconst styleCss = `\nbody { font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; margin: 0; background-color: #f4f4f9; color: #333; }\n.container { max-width: 900px; margin: 2rem auto; padding: 2rem; background: #fff; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }\nheader { display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem; border-bottom: 1px solid #eee; padding-bottom: 1rem; }\nh1 { margin: 0; }\n#logout-btn { background: #f44336; color: white; border: none; padding: 0.5rem 1rem; border-radius: 4px; cursor: pointer; }\n#logout-btn:hover { background: #d32f2f; }\n.variable-item {\n border: 1px solid #ddd;\n border-radius: 8px;\n margin-bottom: 1rem;\n background: #fafafa;\n}\n.variable-summary {\n padding: 1rem 1.5rem;\n font-weight: bold;\n cursor: pointer;\n display: flex;\n justify-content: space-between;\n align-items: center;\n}\n.variable-summary::after {\n content: '\u25BC';\n transition: transform 0.2s;\n}\n.variable-item[open] .variable-summary::after {\n transform: rotate(180deg);\n}\n.variable-details {\n display: grid;\n grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n gap: 1rem;\n padding: 0 1.5rem 1.5rem 1.5rem;\n border-top: 1px solid #eee;\n}\n.variable-item input { width: 100%; box-sizing: border-box; padding: 0.8rem; border: 1px solid #ccc; border-radius: 4px; }\n.actions { grid-column: 1 / -1; display: flex; justify-content: flex-end; }\n.btn { padding: 0.6rem 1.2rem; border: none; border-radius: 4px; cursor: pointer; font-size: 0.9rem; }\n.btn-delete { background-color: #ffcccc; color: #a00; margin-left: auto; }\n.btn-delete:hover { background-color: #ff9999; }\n.btn-add-time { background-color: #e0e0e0; color: #333; }\n.time-input-group { display: flex; align-items: center; gap: 0.5rem; margin-bottom: 0.5rem; }\n.time-input-group input { flex-grow: 1; }\n.btn-delete-time { background: none; border: none; color: #a00; cursor: pointer; font-size: 1.2rem; padding: 0.2rem; }\n.footer-actions { text-align: right; margin-top: 2rem; }\n.btn-primary { background-color: #007aff; color: white; }\n.btn-save { background-color: #4CAF50; color: white; }\n.login-container { background: #fff; padding: 2rem; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }\nform { display: flex; flex-direction: column; }\ninput { padding: 0.8rem; margin-bottom: 1rem; border: 1px solid #ddd; border-radius: 4px; font-size: 1rem; }\nbutton { padding: 0.8rem; background-color: #007aff; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 1rem; }\nbutton:hover { background-color: #0056b3; }\n`;\n\nconst clientScript = `\nlet serversConfig = [];\nlet initialServersConfig = [];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  loadVariables();\n\n  document.getElementById('add-variable').addEventListener('click', () => {\n    const newServer = {\n      id: \\`server-\\${Date.now()}\\`,\n      name: '\u65B0\u670D\u52A1\u5668',\n      apiKey: '',\n      serverId: '',\n      renewUrl: '',\n      renewalTimes: ['01:00'],\n      isNew: true,\n    };\n    serversConfig.push(newServer);\n    renderVariables();\n    const newItem = document.getElementById(newServer.id);\n    newItem.open = true;\n  });\n\n  document.getElementById('save-all').addEventListener('click', saveAll);\n});\n\nasync function loadVariables() {\n  try {\n    const response = await fetch('/api/variables');\n    if (!response.ok) {\n      throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n    }\n    serversConfig = await response.json();\n    initialServersConfig = JSON.parse(JSON.stringify(serversConfig));\n    renderVariables();\n  } catch (error) {\n    console.error('Failed to load variables:', error);\n    alert('\u52A0\u8F7D\u914D\u7F6E\u5931\u8D25\uFF0C\u8BF7\u67E5\u770B\u63A7\u5236\u53F0\u83B7\u53D6\u66F4\u591A\u4FE1\u606F\u3002');\n  }\n}\n\nfunction renderVariables() {\n  const list = document.getElementById('variables-list');\n  list.innerHTML = '';\n  serversConfig.forEach((server, index) => {\n    const id = server.id || \\`server-\\${index}\\`;\n    server.id = id;\n\n    const item = document.createElement('details');\n    item.className = 'variable-item';\n    item.id = id;\n    if (server.isNew) {\n      item.open = true;\n    }\n\n    item.innerHTML = \\`\n      <summary class=\"variable-summary\">\\${server.name || '\u672A\u547D\u540D\u670D\u52A1\u5668'}</summary>\n      <div class=\"variable-details\">\n        <div>\n          <label>\u540D\u79F0 (Name):</label>\n          <input type=\"text\" data-key=\"name\" value=\"\\${server.name || ''}\" placeholder=\"\u4F8B\u5982: \u6211\u7684\u6D4B\u8BD5\u670D\u52A1\u5668\">\n        </div>\n        <div>\n          <label>API Key:</label>\n          <input type=\"text\" data-key=\"apiKey\" value=\"\\${server.apiKey || ''}\" placeholder=\"\u8F93\u5165\u60A8\u7684 API Key\">\n        </div>\n        <div>\n          <label>Server ID:</label>\n          <input type=\"text\" data-key=\"serverId\" value=\"\\${server.serverId || ''}\" placeholder=\"\u8F93\u5165\u670D\u52A1\u5668 ID\">\n        </div>\n        <div>\n          <label>\u7EED\u671F URL (Renew URL):</label>\n          <input type=\"text\" data-key=\"renewUrl\" value=\"\\${server.renewUrl || ''}\" placeholder=\"\u5B8C\u6574\u7684\u7EED\u671F\u8BF7\u6C42 URL\">\n        </div>\n        <div class=\"renewal-times-container\" style=\"grid-column: 1 / -1;\">\n          <label>\u7EED\u671F\u65F6\u95F4 (UTC, 24\u5C0F\u65F6\u5236, HH:mm):</label>\n          <div id=\"times-list-\\${id}\">\n            \\${(server.renewalTimes || []).map((time, timeIndex) => \\`\n              <div class=\"time-input-group\" data-time-index=\"\\${timeIndex}\">\n                <input type=\"time\" value=\"\\${time}\">\n                <button type=\"button\" class=\"btn-delete-time\" onclick=\"removeTime('\\${id}', \\${timeIndex})\">&times;</button>\n              </div>\n            \\`).join('')}\n          </div>\n          <button type=\"button\" class=\"btn btn-add-time\" onclick=\"addTime('\\${id}')\">\u6DFB\u52A0\u65F6\u95F4</button>\n        </div>\n        <div class=\"actions\">\n          <button class=\"btn btn-delete\" onclick=\"deleteVariable('\\${id}')\">\u5220\u9664</button>\n        </div>\n      </div>\n    \\`;\n    list.appendChild(item);\n  });\n\n  document.querySelectorAll('.variable-details input').forEach(input => {\n    input.addEventListener('input', (e) => {\n      const id = e.target.closest('.variable-item').id;\n      const key = e.target.dataset.key;\n      const server = serversConfig.find(s => s.id === id);\n      server[key] = e.target.value;\n      if (key === 'name') {\n        e.target.closest('.variable-item').querySelector('.variable-summary').textContent = e.target.value;\n      }\n    });\n  });\n}\n\nfunction addTime(id) {\n  const server = serversConfig.find(s => s.id === id);\n  if (!server.renewalTimes) {\n    server.renewalTimes = [];\n  }\n  server.renewalTimes.push('01:00');\n  rerenderTimes(id);\n}\n\nfunction removeTime(id, timeIndex) {\n  const server = serversConfig.find(s => s.id === id);\n  server.renewalTimes.splice(timeIndex, 1);\n  rerenderTimes(id);\n}\n\nfunction rerenderTimes(id) {\n  const server = serversConfig.find(s => s.id === id);\n  const timesListDiv = document.getElementById(\\`times-list-\\${id}\\`);\n  timesListDiv.innerHTML = (server.renewalTimes || []).map((time, timeIndex) => \\`\n    <div class=\"time-input-group\" data-time-index=\"\\${timeIndex}\">\n      <input type=\"time\" value=\"\\${time}\">\n      <button type=\"button\" class=\"btn-delete-time\" onclick=\"removeTime('\\${id}', \\${timeIndex})\">&times;</button>\n    </div>\n  \\`).join('');\n\n  // Re-attach event listeners for the time inputs\n  timesListDiv.querySelectorAll('input[type=\"time\"]').forEach((input, index) => {\n    input.addEventListener('input', (e) => {\n      server.renewalTimes[index] = e.target.value;\n    });\n  });\n}\n\n\nfunction updateTimesFromUI() {\n  serversConfig.forEach(server => {\n    const id = server.id;\n    const timesContainer = document.getElementById(\\`times-list-\\${id}\\`);\n    if (timesContainer) {\n      const timeInputs = timesContainer.querySelectorAll('.time-input-group input[type=\"time\"]');\n      server.renewalTimes = Array.from(timeInputs).map(input => input.value);\n    }\n  });\n}\n\nfunction deleteVariable(id) {\n  if (confirm('\u60A8\u786E\u5B9A\u8981\u5220\u9664\u8FD9\u4E2A\u670D\u52A1\u5668\u914D\u7F6E\u5417\uFF1F')) {\n    serversConfig = serversConfig.filter(s => s.id !== id);\n    renderVariables();\n  }\n}\n\nasync function saveAll() {\n  updateTimesFromUI();\n\n  const serversToSave = serversConfig.map(s => {\n    const { id, isNew, ...rest } = s;\n    return rest;\n  });\n\n  try {\n    const response = await fetch('/api/variables', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(serversToSave),\n    });\n\n    if (!response.ok) {\n      throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n    }\n\n    alert('\u6240\u6709\u914D\u7F6E\u5DF2\u6210\u529F\u4FDD\u5B58\uFF01');\n    initialServersConfig = JSON.parse(JSON.stringify(serversConfig));\n    // Reset isNew flag\n    serversConfig.forEach(s => { s.isNew = false; });\n    document.querySelectorAll('.variable-item').forEach(item => item.open = false);\n\n  } catch (error) {\n    console.error('Failed to save variables:', error);\n    alert('\u4FDD\u5B58\u5931\u8D25\uFF0C\u8BF7\u67E5\u770B\u63A7\u5236\u53F0\u83B7\u53D6\u66F4\u591A\u4FE1\u606F\u3002');\n  }\n}\n`;\n\nconst indexHtml = `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>\u7EED\u671F\u7BA1\u7406\u9762\u677F</title>\n  <link rel=\"stylesheet\" href=\"/style.css\">\n</head>\n<body>\n  <div class=\"container\">\n    <header>\n      <h1>\u7EED\u671F\u7BA1\u7406\u9762\u677F</h1>\n      <button id=\"logout-btn\" onclick=\"location.href='/logout'\">\u767B\u51FA</button>\n    </header>\n    \n    <div id=\"variables-list\"></div>\n\n    <button id=\"add-variable\" class=\"btn btn-primary\">\u6DFB\u52A0\u670D\u52A1\u5668</button>\n    <div class=\"footer-actions\">\n      <button id=\"save-all\" class=\"btn btn-save\">\u4FDD\u5B58\u6240\u6709\u66F4\u6539</button>\n    </div>\n  </div>\n\n  <script>${clientScript}</script>\n</body>\n</html>\n`;\n\nconst loginHtml = `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>\u767B\u5F55 - \u7EED\u671F\u7BA1\u7406</title>\n  <link rel=\"stylesheet\" href=\"/style.css\">\n</head>\n<body>\n  <div class=\"login-container\">\n    <h1>\u7BA1\u7406\u5458\u767B\u5F55</h1>\n    <form action=\"/login\" method=\"post\">\n      <input type=\"text\" name=\"username\" placeholder=\"\u7528\u6237\u540D\" required>\n      <input type=\"password\" name=\"password\" placeholder=\"\u5BC6\u7801\" required>\n      <button type=\"submit\">\u767B\u5F55</button>\n    </form>\n  </div>\n</body>\n</html>\n`;\n\n\n// =================================================================================\n// \u4E3B\u5165\u53E3\u70B9: \u76D1\u542C fetch \u548C scheduled \u4E8B\u4EF6\n// =================================================================================\n\nexport default {\n  /**\n   * \u76D1\u542C HTTP \u8BF7\u6C42 (\u7528\u4E8E UI \u548C API)\n   * @param {Request} request\n   * @param {object} env\n   * @param {ExecutionContext} ctx\n   */\n  async fetch(request, env, ctx) {\n    return handleFetch(request, env, ctx);\n  },\n\n  /**\n   * \u76D1\u542C\u8BA1\u5212\u4EFB\u52A1 (\u7528\u4E8E\u5B9A\u65F6\u7EED\u671F)\n   * @param {ScheduledController} controller\n   * @param {object} env\n   * @param {ExecutionContext} ctx\n   */\n  async scheduled(controller, env, ctx) {\n    ctx.waitUntil(handleScheduled(env));\n  },\n};\n\n// =================================================================================\n// \u6838\u5FC3\u529F\u80FD: \u5B9A\u65F6\u7EED\u671F\u5904\u7406\n// =================================================================================\n\n/**\n * \u5904\u7406\u8BA1\u5212\u4EFB\u52A1\u7684\u6838\u5FC3\u51FD\u6570\n * @param {object} env\n */\nasync function handleScheduled(env) {\n  const timestamp = () => '[' + new Date().toISOString() + ']';\n  console.log(timestamp() + ' \uD83D\uDE80 \u5F00\u59CB\u6267\u884C\u81EA\u52A8\u7EED\u671F\u4EFB\u52A1...');\n\n  let servers = await getServersConfig(env);\n\n  if (!servers || servers.length === 0) {\n    const message = \"\u26A0\uFE0F \u914D\u7F6E\u4E3A\u7A7A\uFF0C\u6CA1\u6709\u53EF\u7EED\u671F\u7684\u670D\u52A1\u5668\u3002\u8BF7\u901A\u8FC7 UI \u6DFB\u52A0\u914D\u7F6E\u3002\";\n    console.warn(timestamp() + ' ' + message);\n    await sendTelegramNotification(message, env);\n    return;\n  }\n\n  const now = new Date();\n  // Cloudflare Workers' new Date() is in UTC.\n  const currentHour = now.getUTCHours().toString().padStart(2, '0');\n  const currentMinute = now.getMinutes().toString().padStart(2, '0');\n  const currentTime = currentHour + ':' + currentMinute;\n  \n  console.log(timestamp() + ' \u2139\uFE0F \u5F53\u524D\u65F6\u95F4 (UTC): ' + currentTime + '\u3002\u68C0\u6D4B\u5230 ' + servers.length + ' \u53F0\u670D\u52A1\u5668\u914D\u7F6E\u3002');\n\n  const serversToRenew = servers.filter(server => {\n    // If renewalTimes is not set or empty, renew every time.\n    if (!server.renewalTimes || server.renewalTimes.length === 0) {\n      return true;\n    }\n    // Check if the current time is in the renewalTimes array.\n    return server.renewalTimes.includes(currentTime);\n  });\n\n  if (serversToRenew.length === 0) {\n    console.log(timestamp() + ' \u2139\uFE0F \u5F53\u524D\u65F6\u95F4\u6CA1\u6709\u9700\u8981\u7EED\u671F\u7684\u670D\u52A1\u5668\u3002\u4EFB\u52A1\u7ED3\u675F\u3002');\n    return;\n  }\n\n  console.log(timestamp() + ' \u2139\uFE0F \u53D1\u73B0 ' + serversToRenew.length + ' \u53F0\u670D\u52A1\u5668\u9700\u8981\u5728\u6B64\u65F6\u95F4\u7EED\u671F\u3002');\n\n  const results = await Promise.allSettled(\n    serversToRenew.map(server => renewServer(server, timestamp))\n  );\n\n  console.log(timestamp() + ' \u2705 \u6240\u6709\u9700\u8981\u7EED\u671F\u7684\u670D\u52A1\u5668\u4EFB\u52A1\u5DF2\u5904\u7406\u5B8C\u6BD5\u3002');\n\n  // --- Generate and send notification ---\n  let successCount = 0;\n  let failedCount = 0;\n  const summary = results.map((result, index) => {\n    const server = serversToRenew[index];\n    const serverName = server.name || '\u670D\u52A1\u5668 #' + (servers.indexOf(server) + 1);\n    if (result.status === 'fulfilled' && result.value.startsWith('\u6210\u529F')) {\n      successCount++;\n      return '\u2705 ' + serverName + ': \u7EED\u671F\u6210\u529F\u3002';\n    } else {\n      failedCount++;\n      const reason = (result.status === 'rejected') ? result.reason.message : result.value;\n      return '\u274C ' + serverName + ': \u5931\u8D25 - ' + reason;\n    }\n  }).join('\\\\n');\n\n  const title = 'Gamechi \u81EA\u52A8\u7EED\u671F\u62A5\u544A';\n  const finalMessage = title + '\\\\n\\\\n\u603B\u89C8: ' + successCount + ' \u6210\u529F, ' + failedCount + ' \u5931\u8D25\u3002\\\\n\\\\n' + summary;\n  \n  console.log(finalMessage);\n  await sendTelegramNotification(finalMessage, env);\n}\n\n/**\n * \u4ECE KV \u6216\u73AF\u5883\u53D8\u91CF\u4E2D\u83B7\u53D6\u670D\u52A1\u5668\u914D\u7F6E\n * @param {object} env\n * @returns {Promise<Array>}\n */\nasync function getServersConfig(env) {\n  if (!env.AUTO_RENEW_KV) {\n    console.error(\"\u274C KV \u547D\u540D\u7A7A\u95F4 'AUTO_RENEW_KV' \u672A\u7ED1\u5B9A\u3002\u8BF7\u68C0\u67E5 wrangler.toml \u914D\u7F6E\u3002\");\n    return [];\n  }\n  \n  let servers = await env.AUTO_RENEW_KV.get(KV_CONFIG_KEY, \"json\");\n  \n  // \u5982\u679C KV \u4E3A\u7A7A\uFF0C\u5C1D\u8BD5\u4ECE\u73AF\u5883\u53D8\u91CF SERVERS_CONFIG (\u65E7\u7248) \u8FC1\u79FB\n  if (!servers && env.SERVERS_CONFIG) {\n    console.log(\"\u2139\uFE0F \u68C0\u6D4B\u5230\u65E7\u7248 SERVERS_CONFIG\uFF0C\u6B63\u5728\u5C1D\u8BD5\u8FC1\u79FB\u5230 KV...\");\n    try {\n      servers = JSON.parse(env.SERVERS_CONFIG);\n      if (Array.isArray(servers)) {\n        await env.AUTO_RENEW_KV.put(KV_CONFIG_KEY, JSON.stringify(servers));\n        console.log(\"\u2705 \u6210\u529F\u5C06 SERVERS_CONFIG \u8FC1\u79FB\u5230 KV\u3002\");\n      } else {\n        servers = [];\n      }\n    } catch (e) {\n      console.error(\"\u274C \u89E3\u6790\u65E7\u7248 SERVERS_CONFIG \u5931\u8D25:\", e.message);\n      servers = [];\n    }\n  }\n  \n  servers = Array.isArray(servers) ? servers : [];\n\n  // --- Data Migration: renewalTime to renewalTimes ---\n  // This ensures backward compatibility with the old data structure.\n  let needsUpdate = false;\n  servers.forEach(server => {\n    if (typeof server.renewalTime === 'string') {\n      server.renewalTimes = server.renewalTime ? [server.renewalTime] : [];\n      delete server.renewalTime;\n      needsUpdate = true;\n    }\n  });\n\n  // If we migrated any data, save it back to KV.\n  if (needsUpdate) {\n    console.log(\"\uD83D\uDD04 \u6B63\u5728\u5C06\u65E7\u7684 renewalTime \u683C\u5F0F\u8FC1\u79FB\u5230 renewalTimes...\");\n    await env.AUTO_RENEW_KV.put(KV_CONFIG_KEY, JSON.stringify(servers));\n    console.log(\"\u2705 \u6570\u636E\u7ED3\u6784\u8FC1\u79FB\u5B8C\u6210\u3002\");\n  }\n\n  return servers;\n}\n\n/**\n * \u4E3A\u5355\u4E2A\u670D\u52A1\u5668\u53D1\u9001\u7EED\u671F\u8BF7\u6C42\n * @param {object} server\n * @param {function} timestamp\n */\nasync function renewServer(server, timestamp) {\n  const serverName = server.name || '(\u672A\u547D\u540D: ' + server.serverId + ')';\n  \n  if (!server.apiKey || !server.serverId || !server.renewUrl) {\n    throw new Error('\u914D\u7F6E\u4E0D\u5B8C\u6574 (\u7F3A\u5C11 apiKey, serverId, \u6216 renewUrl)');\n  }\n  \n  console.log(timestamp() + ' \uD83D\uDD04 \u5F00\u59CB\u4E3A \"' + serverName + '\" \u7EED\u671F...');\n\n  try {\n    const response = await fetch(server.renewUrl, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + server.apiKey,\n        'User-Agent': 'Cloudflare-Worker-Gameji-Auto-Renew/2.0',\n      },\n      body: JSON.stringify({ server_id: server.serverId }),\n    });\n\n    if (response.status === 200) {\n      console.log(timestamp() + ' \u2705 \u7EED\u671F\u6210\u529F: \"' + serverName + '\"');\n      return '\u6210\u529F';\n    }\n\n    const messages = {\n      400: '\u8BF7\u6C42\u65E0\u6548(400)\uFF0C\u53EF\u80FD\u4ECA\u65E5\u5DF2\u7EED\u671F',\n      404: '\u672A\u627E\u5230\u670D\u52A1\u5668(404)',\n      419: '\u6388\u6743\u8FC7\u671F(419)',\n      403: '\u65E0\u6743\u8BBF\u95EE(403)',\n    };\n    const message = messages[response.status] || '\u8FD4\u56DE\u7801: ' + response.status;\n    console.warn(timestamp() + ' \u26A0\uFE0F \u7EED\u671F\u5931\u8D25: \"' + serverName + '\" - ' + message);\n    return '\u5931\u8D25 (' + message + ')';\n\n  } catch (error) {\n    console.error(timestamp() + ' \u274C \u8BF7\u6C42\u5F02\u5E38: \"' + serverName + '\" -', error.message);\n    throw new Error('\u8BF7\u6C42\u5F02\u5E38: ' + error.message);\n  }\n}\n\n/**\n * \u53D1\u9001 Telegram \u901A\u77E5\n * @param {string} text\n * @param {object} env\n */\nasync function sendTelegramNotification(text, env) {\n  const { TG_BOT_TOKEN, TG_CHAT_ID } = env;\n\n  if (!TG_BOT_TOKEN || !TG_CHAT_ID) {\n    console.log(\"\u2139\uFE0F \u672A\u914D\u7F6E Telegram \u73AF\u5883\u53D8\u91CF (TG_BOT_TOKEN, TG_CHAT_ID)\uFF0C\u8DF3\u8FC7\u901A\u77E5\u3002\");\n    return;\n  }\n\n  const url = 'https://api.telegram.org/bot' + TG_BOT_TOKEN + '/sendMessage';\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        chat_id: TG_CHAT_ID,\n        text: text,\n        parse_mode: 'Markdown',\n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error(\"\u274C \u53D1\u9001 Telegram \u901A\u77E5\u5931\u8D25:\", errorData.description);\n    } else {\n      console.log(\"\u2705 Telegram \u901A\u77E5\u5DF2\u53D1\u9001\u3002\");\n    }\n  } catch (error) {\n    console.error(\"\u274C \u8C03\u7528 Telegram API \u65F6\u51FA\u9519:\", error.message);\n  }\n}\n\n// =================================================================================\n// Web UI & API \u8BF7\u6C42\u5904\u7406\n// =================================================================================\n\n/**\n * \u5904\u7406 HTTP \u8BF7\u6C42\u7684\u8DEF\u7531\u51FD\u6570\n * @param {Request} request\n * @param {object} env\n */\nasync function handleFetch(request, env, ctx) {\n  const url = new URL(request.url);\n  \n  if (url.pathname === '/') {\n    return handleUIRoute(request, env);\n  }\n  if (url.pathname === '/login' && request.method === 'POST') {\n    return handleLogin(request, env);\n  }\n  if (url.pathname === '/logout') {\n    return handleLogout();\n  }\n  if (url.pathname === '/api/variables' && ['GET', 'POST'].includes(request.method)) {\n    return handleApiVariables(request, env);\n  }\n  if (url.pathname === '/style.css') {\n    return new Response(styleCss, { headers: { 'Content-Type': 'text/css;charset=UTF-8' } });\n  }\n  \n  return new Response('Not Found', { status: 404 });\n}\n\n/**\n * \u68C0\u67E5\u7528\u6237\u662F\u5426\u5DF2\u8BA4\u8BC1\n * @param {Request} request\n * @param {object} env\n * @returns {Promise<boolean>}\n */\nasync function isAuthenticated(request, env) {\n  const cookie = request.headers.get('Cookie');\n  if (!cookie || !cookie.includes(AUTH_COOKIE_NAME)) {\n    return false;\n  }\n  \n  // \u5982\u679C\u672A\u8BBE\u7F6E\u5BC6\u7801\uFF0C\u5219\u59CB\u7EC8\u8FD4\u56DE true\n  if (!env.AUTH_USERNAME && !env.AUTH_PASSWORD) {\n    return true;\n  }\n  \n  const token = cookie.split(';').find(c => c.trim().startsWith(AUTH_COOKIE_NAME + '=')).split('=')[1];\n  \n  // \u7B80\u5355\u7684\u57FA\u4E8E\u65F6\u95F4\u7684\u4EE4\u724C\u9A8C\u8BC1 (\u8FD9\u91CC\u4E3A\u4E86\u7B80\u5355\uFF0C\u53EA\u68C0\u67E5 token \u662F\u5426\u5B58\u5728)\n  // \u5728\u5B9E\u9645\u751F\u4EA7\u4E2D\uFF0C\u60A8\u53EF\u80FD\u5E0C\u671B\u4F7F\u7528 JWT \u6216\u66F4\u5B89\u5168\u7684\u4EE4\u724C\u673A\u5236\n  return token === await getAuthToken(env);\n}\n\n/**\n * \u83B7\u53D6/\u751F\u6210\u4E00\u4E2A\u5B89\u5168\u7684\u8BA4\u8BC1 Token\n * @param {object} env\n */\nasync function getAuthToken(env) {\n  const secret = env.AUTH_PASSWORD || \"admin\"; // Fallback for safety\n  const username = env.AUTH_USERNAME || \"admin\";\n\n  const encoder = new TextEncoder();\n  const keyData = encoder.encode(secret);\n  const messageData = encoder.encode(username);\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    keyData,\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"]\n  );\n\n  const signature = await crypto.subtle.sign(\"HMAC\", key, messageData);\n  \n  // Convert ArrayBuffer to hex string\n  return Array.from(new Uint8Array(signature)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n\n/**\n * \u5904\u7406 UI \u8DEF\u7531\uFF0C\u6839\u636E\u8BA4\u8BC1\u72B6\u6001\u663E\u793A\u767B\u5F55\u9875\u6216\u7BA1\u7406\u9875\n * @param {Request} request\n * @param {object} env\n */\nasync function handleUIRoute(request, env) {\n  if (await isAuthenticated(request, env)) {\n    return new Response(indexHtml, { headers: { 'Content-Type': 'text/html;charset=UTF-8' } });\n  }\n  return new Response(loginHtml, { headers: { 'Content-Type': 'text/html;charset=UTF-8' } });\n}\n\n/**\n * \u5904\u7406\u767B\u5F55\u8BF7\u6C42\n * @param {Request} request\n * @param {object} env\n */\nasync function handleLogin(request, env) {\n  try {\n    const formData = await request.formData();\n    const username = formData.get('username');\n    const password = formData.get('password');\n\n    const adminUser = env.AUTH_USERNAME || 'admin'\n    const adminPass = env.AUTH_PASSWORD || 'admin'\n\n    if (username === adminUser && password === adminPass) {\n      const token = await getAuthToken(env);\n      const headers = new Headers({ 'Location': '/' });\n      // \u8BBE\u7F6E\u4E00\u4E2A\u7B80\u5355\u7684 cookie\n      headers.append('Set-Cookie', AUTH_COOKIE_NAME + '=' + token + '; Path=/; HttpOnly; Secure; SameSite=Strict');\n      return new Response(null, { status: 302, headers });\n    } else {\n      return new Response('\u7528\u6237\u540D\u6216\u5BC6\u7801\u9519\u8BEF\u3002', { status: 401 });\n    }\n  } catch (e) {\n    return new Response('\u767B\u5F55\u8BF7\u6C42\u65E0\u6548\u3002', { status: 400 });\n  }\n}\n\n/**\n * \u5904\u7406\u767B\u51FA\u8BF7\u6C42\n */\nfunction handleLogout() {\n  const headers = new Headers({ 'Location': '/' });\n  // \u6E05\u9664 cookie\n  headers.append('Set-Cookie', AUTH_COOKIE_NAME + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT');\n  return new Response(null, { status: 302, headers });\n}\n\n/**\n * \u5904\u7406\u53D8\u91CF API \u8BF7\u6C42\n * @param {Request} request\n * @param {object} env\n */\nasync function handleApiVariables(request, env) {\n  if (!(await isAuthenticated(request, env))) {\n    return new Response('Unauthorized', { status: 401 });\n  }\n\n  if (!env.AUTO_RENEW_KV) {\n    return new Response(\"KV \u547D\u540D\u7A7A\u95F4\u672A\u7ED1\u5B9A\u3002\", { status: 500 });\n  }\n\n  if (request.method === 'GET') {\n    const servers = await getServersConfig(env);\n    return new Response(JSON.stringify(servers || []), { headers: { 'Content-Type': 'application/json' } });\n  }\n\n  if (request.method === 'POST') {\n    try {\n      const servers = await request.json();\n      if (!Array.isArray(servers)) {\n        return new Response('\u8BF7\u6C42\u4F53\u5FC5\u987B\u662F\u4E00\u4E2A JSON \u6570\u7EC4\u3002', { status: 400 });\n      }\n      await env.AUTO_RENEW_KV.put(KV_CONFIG_KEY, JSON.stringify(servers));\n      return new Response('\u914D\u7F6E\u5DF2\u4FDD\u5B58\u3002', { status: 200 });\n    } catch (e) {\n      return new Response('\u65E0\u6548\u7684 JSON \u683C\u5F0F\u3002', { status: 400 });\n    }\n  }\n\n  return new Response('Method Not Allowed', { status: 405 });\n}\n"],
  "mappings": "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",
  "names": []
}
